{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amykumar/seiGarnet/4thUnit/projectWeek/The-Gardeners-Journal/client/src/screens/DetailPlant.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { getOnePlant } from \"../services/plants\";\nimport { useParams } from \"react-router-dom\";\nimport { addZone } from \"../services/zones\";\nexport default function DetailPlant(props) {\n  _s();\n\n  const [plantItem, setPlantItem] = useState(null);\n  const [zoneID, setZoneID] = useState(\"\");\n  const {\n    id\n  } = useParams(); // const { plants } = props;\n\n  useEffect(() => {\n    const fetchPlantItem = async () => {\n      const plantData = await getOnePlant(id);\n      setPlantItem(plantData);\n    };\n\n    fetchPlantItem();\n  }, [id]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const plantItem = await addZone({\n      zone_id: zoneID,\n      plant_id: id\n    });\n    setPlantItem(plantItem);\n  }; //  - - - - \"SELECT ZONE\" drop-down: - - - -\n\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setZoneID(value);\n  }; //  - - - - - - - - - - - - - - - - - - -\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: plantItem === null || plantItem === void 0 ? void 0 : plantItem.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: plantItem === null || plantItem === void 0 ? void 0 : plantItem.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: plantItem === null || plantItem === void 0 ? void 0 : plantItem.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: plantItem === null || plantItem === void 0 ? void 0 : plantItem.image_url,\n      alt: \"plant pic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), plantItem === null || plantItem === void 0 ? void 0 : plantItem.zones.map(zone => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: zone.zone\n    }, zone.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: \"default\",\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"default\",\n          children: \"-- Select a zone --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), props.zones.map(zone =>\n        /*#__PURE__*/\n        // we track the zone's id as the \"value\" which will get added to state onChange\n        // the zone's name goes between the open and close tag which is what the user sees\n        _jsxDEV(\"option\", {\n          value: zone.id,\n          children: zone.name\n        }, zone.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DetailPlant, \"7Z8+x+vZpSyxTI9m6piET1hsVG0=\", false, function () {\n  return [useParams];\n});\n\n_c = DetailPlant;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPlant\");","map":{"version":3,"sources":["/Users/amykumar/seiGarnet/4thUnit/projectWeek/The-Gardeners-Journal/client/src/screens/DetailPlant.jsx"],"names":["React","useState","useEffect","getOnePlant","useParams","addZone","DetailPlant","props","plantItem","setPlantItem","zoneID","setZoneID","id","fetchPlantItem","plantData","handleSubmit","e","preventDefault","zone_id","plant_id","handleChange","value","target","name","image_url","zones","map","zone"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport { getOnePlant } from \"../services/plants\";\nimport { useParams } from \"react-router-dom\";\nimport { addZone } from \"../services/zones\";\n\nexport default function DetailPlant(props) {\n  const [plantItem, setPlantItem] = useState(null);\n  const [zoneID, setZoneID] = useState(\"\");\n  const { id } = useParams();\n  // const { plants } = props;\n\n  useEffect(() => {\n    const fetchPlantItem = async () => {\n      const plantData = await getOnePlant(id);\n      setPlantItem(plantData);\n    };\n    fetchPlantItem();\n  }, [id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const plantItem = await addZone({\n      zone_id: zoneID,\n      plant_id: id,\n    });\n    setPlantItem(plantItem);\n  };\n\n  //  - - - - \"SELECT ZONE\" drop-down: - - - -\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setZoneID(value);\n  };\n  //  - - - - - - - - - - - - - - - - - - -\n\n  return (\n    <div>\n      <h2>{plantItem?.name}</h2>\n      <h3>{plantItem?.name}</h3>\n      <h3>{plantItem?.name}</h3>\n      <img src={plantItem?.image_url} alt='plant pic' />\n      {plantItem?.zones.map((zone) => (\n        <p key={zone.id}>{zone.zone}</p>\n      ))}\n\n\n      <form onSubmit={handleSubmit}>\n        <select defaultValue=\"default\" onChange={handleChange}>\n          {/* we can set a default value to tell people to select a zone*/}\n          {/* the \"defaultValue\" on the <select> tag needs to match the \"value\" on our default <option> tag */}\n          {/* we also add the \"disabled\" in the <option> to prevent users from selecting it*/}\n          <option disabled value=\"default\">\n            -- Select a zone --\n          </option>\n          {/* now we loop over all zones and return an <option> tag for each */}\n          {props.zones.map((zone) => (\n            // we track the zone's id as the \"value\" which will get added to state onChange\n            // the zone's name goes between the open and close tag which is what the user sees\n            <option value={zone.id} key={zone.id}>\n              {zone.name}\n            </option>\n          ))}\n        </select>\n        <button>add</button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}