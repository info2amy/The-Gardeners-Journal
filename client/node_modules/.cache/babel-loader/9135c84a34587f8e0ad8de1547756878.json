{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amykumar/seiGarnet/4thUnit/projectWeek/The-Gardeners-Journal/client/src/containers/MainCon.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { useHistory, Switch, Route } from \"react-router-dom\";\nimport Zones from \"../screens/Zones\";\nimport { getAllZones } from \"../services/zones\";\nimport Plants from \"../screens/Plants\";\nimport { getAllPlants, postPlant, deletePlant, editPlant } from \"../services/plants\";\nimport CreatePlant from \"../screens/CreatePlant\";\nimport DetailPlant from \"../screens/DetailPlant\";\nimport EditPlant from \"../screens/EditPlant\";\nexport default function Home(props) {\n  _s();\n\n  const [zones, setZones] = useState([]);\n  const [plants, setPlants] = useState([]);\n  const history = useHistory();\n  const {\n    currentUser\n  } = props;\n  useEffect(() => {\n    const fetchZones = async () => {\n      const zoneData = await getAllZones();\n      setZones(zoneData);\n    };\n\n    fetchZones();\n  }, []);\n  useEffect(() => {\n    const fetchPlants = async () => {\n      const plantData = await getAllPlants();\n      setPlants(plantData);\n    };\n\n    fetchPlants();\n  }, []);\n\n  const handleCreate = async plantData => {\n    const newPlant = await postPlant(plantData);\n    setPlants(prevState => [...prevState, newPlant]);\n    history.push(\"/plants\");\n  };\n\n  const handleDelete = async id => {\n    await deletePlant(id);\n    history.push(\"/plants\");\n    setPlants(prevState => prevState.filter(plantItem => {\n      return plantItem.id !== Number(id);\n    }));\n  };\n\n  const handleUpdate = async (id, plantData) => {\n    const updatedPlant = await editPlant(id, plantData);\n    setPlants(prevState => prevState.map(plantItem => {\n      return plantItem.id === Number(id) ? updatedPlant : plantItem;\n    }));\n    history.push(\"/plants\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/plants/new\",\n      children: /*#__PURE__*/_jsxDEV(CreatePlant, {\n        handleCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/plants/:id/edit\",\n      children: /*#__PURE__*/_jsxDEV(EditPlant, {\n        plants: plants,\n        handleUpdate: handleUpdate,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/plants/:id\",\n      children: /*#__PURE__*/_jsxDEV(DetailPlant, {\n        zones: zones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/plants\",\n      children: /*#__PURE__*/_jsxDEV(Plants, {\n        plants: plants,\n        handleDelete: handleDelete,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/zones\",\n      children: /*#__PURE__*/_jsxDEV(Zones, {\n        zones: zones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"VnE1+/84HpVMPGrAaC13D82e/54=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/amykumar/seiGarnet/4thUnit/projectWeek/The-Gardeners-Journal/client/src/containers/MainCon.jsx"],"names":["React","useState","useEffect","useHistory","Switch","Route","Zones","getAllZones","Plants","getAllPlants","postPlant","deletePlant","editPlant","CreatePlant","DetailPlant","EditPlant","Home","props","zones","setZones","plants","setPlants","history","currentUser","fetchZones","zoneData","fetchPlants","plantData","handleCreate","newPlant","prevState","push","handleDelete","id","filter","plantItem","Number","handleUpdate","updatedPlant","map"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,kBAA1C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,YADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,oBALP;AAMA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMqB,OAAO,GAAGnB,UAAU,EAA1B;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAkBN,KAAxB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMlB,WAAW,EAAlC;AACAY,MAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,UAAU;AACX,GANQ,EAMN,EANM,CAAT;AAQAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,WAAW,GAAG,YAAY;AAC9B,YAAMC,SAAS,GAAG,MAAMlB,YAAY,EAApC;AACAY,MAAAA,SAAS,CAACM,SAAD,CAAT;AACD,KAHD;;AAIAD,IAAAA,WAAW;AACZ,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,YAAY,GAAG,MAAOD,SAAP,IAAqB;AACxC,UAAME,QAAQ,GAAG,MAAMnB,SAAS,CAACiB,SAAD,CAAhC;AACAN,IAAAA,SAAS,CAAES,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeD,QAAf,CAAhB,CAAT;AACAP,IAAAA,OAAO,CAACS,IAAR,CAAa,SAAb;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAOC,EAAP,IAAc;AACjC,UAAMtB,WAAW,CAACsB,EAAD,CAAjB;AACAX,IAAAA,OAAO,CAACS,IAAR,CAAa,SAAb;AACAV,IAAAA,SAAS,CAAES,SAAD,IACRA,SAAS,CAACI,MAAV,CAAkBC,SAAD,IAAe;AAC9B,aAAOA,SAAS,CAACF,EAAV,KAAiBG,MAAM,CAACH,EAAD,CAA9B;AACD,KAFD,CADO,CAAT;AAKD,GARD;;AAUA,QAAMI,YAAY,GAAG,OAAOJ,EAAP,EAAWN,SAAX,KAAyB;AAC5C,UAAMW,YAAY,GAAG,MAAM1B,SAAS,CAACqB,EAAD,EAAKN,SAAL,CAApC;AACAN,IAAAA,SAAS,CAAES,SAAD,IACVA,SAAS,CAACS,GAAV,CAAeJ,SAAD,IAAe;AAC3B,aAAOA,SAAS,CAACF,EAAV,KAAiBG,MAAM,CAACH,EAAD,CAAvB,GAA8BK,YAA9B,GAA6CH,SAApD;AACD,KAFD,CADS,CAAT;AAIAb,IAAAA,OAAO,CAACS,IAAR,CAAa,SAAb;AACD,GAPD;;AASA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,YAAY,EAAEH;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,kBAAZ;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAER,MAAnB;AAA2B,QAAA,YAAY,EAAEiB,YAAzC;AAAuD,QAAA,YAAY,EAAEL;AAArE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEd;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,MAAM,EAAEE,MADV;AAEE,QAAA,YAAY,EAAEY,YAFhB;AAGE,QAAA,WAAW,EAAET;AAHf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eAgBE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEL;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GArEuBF,I;UAGNb,U;;;KAHMa,I","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport { useHistory, Switch, Route } from \"react-router-dom\";\nimport Zones from \"../screens/Zones\";\nimport { getAllZones } from \"../services/zones\";\nimport Plants from \"../screens/Plants\";\nimport {\n  getAllPlants,\n  postPlant,\n  deletePlant,\n  editPlant,\n} from \"../services/plants\";\nimport CreatePlant from \"../screens/CreatePlant\";\nimport DetailPlant from \"../screens/DetailPlant\";\nimport EditPlant from \"../screens/EditPlant\";\n\nexport default function Home(props) {\n  const [zones, setZones] = useState([]);\n  const [plants, setPlants] = useState([]);\n  const history = useHistory();\n  const { currentUser } = props;\n\n  useEffect(() => {\n    const fetchZones = async () => {\n      const zoneData = await getAllZones();\n      setZones(zoneData);\n    };\n    fetchZones();\n  }, []);\n\n  useEffect(() => {\n    const fetchPlants = async () => {\n      const plantData = await getAllPlants();\n      setPlants(plantData);\n    };\n    fetchPlants();\n  }, []);\n\n  const handleCreate = async (plantData) => {\n    const newPlant = await postPlant(plantData);\n    setPlants((prevState) => [...prevState, newPlant]);\n    history.push(\"/plants\");\n  };\n\n  const handleDelete = async (id) => {\n    await deletePlant(id);\n    history.push(\"/plants\")\n    setPlants((prevState) =>\n      prevState.filter((plantItem) => {\n        return plantItem.id !== Number(id);\n      })\n    );\n  };\n\n  const handleUpdate = async (id, plantData) => {\n    const updatedPlant = await editPlant(id, plantData);\n    setPlants((prevState) =>\n    prevState.map((plantItem) => {\n      return plantItem.id === Number(id) ? updatedPlant : plantItem;\n    }))\n    history.push(\"/plants\")\n  };\n\n  return (\n    <Switch>\n      <Route path=\"/plants/new\">\n        <CreatePlant handleCreate={handleCreate} />\n      </Route>\n      <Route path=\"/plants/:id/edit\">\n        <EditPlant plants={plants} handleUpdate={handleUpdate} handleDelete={handleDelete} />\n      </Route>\n      <Route path=\"/plants/:id\">\n        <DetailPlant zones={zones} />\n      </Route>\n      <Route path=\"/plants\">\n        <Plants\n          plants={plants}\n          handleDelete={handleDelete}\n          currentUser={currentUser} />\n      </Route>\n      <Route path=\"/zones\">\n        <Zones zones={zones} />\n      </Route>\n    </Switch>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}