{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amykumar/seiGarnet/4thUnit/projectWeek/The-Gardeners-Journal/client/src/screens/EditPlant.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\nexport default function EditPlant(props) {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: \"\"\n  });\n  const {\n    name\n  } = formData;\n  const {\n    plants,\n    handleUpdate\n  } = props;\n  const {\n    id\n  } = useParams();\n  const [isUpdated, setUpdated] = useState(false);\n  useEffect(() => {\n    const prefillFormData = () => {\n      const plantItem = plants.find(plantItem => {\n        return plantItem.id === Number(id);\n      });\n      setFormData({\n        name: plantItem.name\n      });\n    };\n\n    if (plants.length) {\n      prefillFormData();\n    }\n  }, [plants]);\n\n  if (isUpdated) {}\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleUpdate(id, formData);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Plant information:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPlant, \"Rh90Q65JclBCP+uGk3Z1vS8xRq4=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPlant;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPlant\");","map":{"version":3,"sources":["/Users/amykumar/seiGarnet/4thUnit/projectWeek/The-Gardeners-Journal/client/src/screens/EditPlant.jsx"],"names":["React","useState","useEffect","useParams","Redirect","EditPlant","props","formData","setFormData","name","plants","handleUpdate","id","isUpdated","setUpdated","prefillFormData","plantItem","find","Number","length","handleChange","e","value","target","prevState","preventDefault"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,kBAApC;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,IAAI,EAAE;AADiC,GAAD,CAAxC;AAGA,QAAM;AAAEA,IAAAA;AAAF,MAAWF,QAAjB;AACA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA2BL,KAAjC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAST,SAAS,EAAxB;AACA,QAAM,CAACU,SAAD,EAAYC,UAAZ,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,eAAe,GAAG,MAAM;AAC5B,YAAMC,SAAS,GAAGN,MAAM,CAACO,IAAP,CAAaD,SAAD,IAAe;AAC3C,eAAOA,SAAS,CAACJ,EAAV,KAAiBM,MAAM,CAACN,EAAD,CAA9B;AACD,OAFiB,CAAlB;AAGAJ,MAAAA,WAAW,CAAC;AACVC,QAAAA,IAAI,EAAEO,SAAS,CAACP;AADN,OAAD,CAAX;AAGD,KAPD;;AAQA,QAAIC,MAAM,CAACS,MAAX,EAAmB;AACjBJ,MAAAA,eAAe;AAChB;AACF,GAZQ,EAYN,CAACL,MAAD,CAZM,CAAT;;AAcA,MAAIG,SAAJ,EAAe,CAEd;;AAED,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEZ,MAAAA,IAAF;AAAQa,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAf,IAAAA,WAAW,CAAEgB,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1B,OAACf,IAAD,GAAQa;AAFkB,KAAhB,CAAD,CAAX;AAID,GAND;;AAQA,sBACE;AACE,IAAA,QAAQ,EAAGD,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACI,cAAF;AACAd,MAAAA,YAAY,CAACC,EAAD,EAAKL,QAAL,CAAZ;AACD,KAJH;AAAA,4BAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,uCAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAEE,IAAtC;AAA4C,QAAA,QAAQ,EAAEW;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GApDuBf,S;UAMPF,S;;;KANOE,S","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\n\nexport default function EditPlant(props) {\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n  const { name } = formData;\n  const { plants, handleUpdate } = props;\n  const { id } = useParams();\n  const [isUpdated, setUpdated] = useState(false);\n\n  useEffect(() => {\n    const prefillFormData = () => {\n      const plantItem = plants.find((plantItem) => {\n        return plantItem.id === Number(id);\n      });\n      setFormData({\n        name: plantItem.name,\n      });\n    };\n    if (plants.length) {\n      prefillFormData();\n    }\n  }, [plants]);\n\n  if (isUpdated) {\n    \n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleUpdate(id, formData);\n      }}\n    >\n      <h3>Edit Plant information:</h3>\n      <label>\n        Name:\n        <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n      </label>\n      <br />\n      <br/>\n      <button>Submit Changes</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}