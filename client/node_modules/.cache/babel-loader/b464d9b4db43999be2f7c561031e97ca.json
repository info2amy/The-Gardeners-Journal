{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/amykumar/seiGarnet/4thUnit/projectWeek/The-Gardeners-Journal/client/src/screens/DetailPlant.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { getOnePlant } from \"../services/plants\";\nimport { useParams } from \"react-router-dom\";\nimport { addZone } from \"../services/zones\";\nexport default function DetailPlant(props) {\n  _s();\n\n  const [plantItem, setPlantItem] = useState(null);\n  const [zoneID, setZoneID] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchPlantItem = async () => {\n      const plantData = await getOnePlant(id);\n      setPlantItem(plantData);\n    };\n\n    fetchPlantItem();\n  }, [id]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const plantItem = await addZone({\n      zone_id: zoneID,\n      plant_id: id\n    });\n    setPlantItem(plantItem);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: plantItem === null || plantItem === void 0 ? void 0 : plantItem.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), plantItem === null || plantItem === void 0 ? void 0 : plantItem.zones.map(zone => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: zone.zone\n    }, zone.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DetailPlant, \"7Z8+x+vZpSyxTI9m6piET1hsVG0=\", false, function () {\n  return [useParams];\n});\n\n_c = DetailPlant;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPlant\");","map":{"version":3,"sources":["/Users/amykumar/seiGarnet/4thUnit/projectWeek/The-Gardeners-Journal/client/src/screens/DetailPlant.jsx"],"names":["React","useState","useEffect","getOnePlant","useParams","addZone","DetailPlant","props","plantItem","setPlantItem","zoneID","setZoneID","id","fetchPlantItem","plantData","handleSubmit","e","preventDefault","zone_id","plant_id","name","zones","map","zone"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAASR,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,cAAc,GAAG,YAAY;AACjC,YAAMC,SAAS,GAAG,MAAMX,WAAW,CAACS,EAAD,CAAnC;AACAH,MAAAA,YAAY,CAACK,SAAD,CAAZ;AACD,KAHD;;AAIAD,IAAAA,cAAc;AACf,GANQ,EAMN,CAACD,EAAD,CANM,CAAT;;AAQA,QAAMG,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMT,SAAS,GAAG,MAAMH,OAAO,CAAC;AAC9Ba,MAAAA,OAAO,EAAER,MADqB;AAE9BS,MAAAA,QAAQ,EAAEP;AAFoB,KAAD,CAA/B;AAIAH,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,GAPD;;AAWA,sBACE;AAAA,4BACE;AAAA,gBAAKA,SAAL,aAAKA,SAAL,uBAAKA,SAAS,CAAEY;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGZ,SAFH,aAEGA,SAFH,uBAEGA,SAAS,CAAEa,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,iBACxB;AAAA,gBAAkBA,IAAI,CAACA;AAAvB,OAAQA,IAAI,CAACX,EAAb;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAhCuBN,W;UAGPF,S;;;KAHOE,W","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport { getOnePlant } from \"../services/plants\";\nimport { useParams } from \"react-router-dom\";\nimport { addZone } from \"../services/zones\";\n\nexport default function DetailPlant(props) {\n  const [plantItem, setPlantItem] = useState(null);\n  const [zoneID, setZoneID] = useState(\"\");\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchPlantItem = async () => {\n      const plantData = await getOnePlant(id);\n      setPlantItem(plantData);\n    };\n    fetchPlantItem();\n  }, [id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const plantItem = await addZone({\n      zone_id: zoneID,\n      plant_id: id,\n    });\n    setPlantItem(plantItem);\n  };\n\n\n  \n  return (\n    <div>\n      <h3>{plantItem?.name}</h3>\n      {plantItem?.zones.map(zone => (\n        <p key={zone.id}>{zone.zone}</p>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}